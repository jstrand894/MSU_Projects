---
title: "Results"
editor_options: 
  chunk_output_type: console
bibliography: paper1.bib
link-citations: true
csl: entomological-society-of-america-2.csl
suppress-bibliography: true
---

```{r setup1, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)
```

```{r libraries}
library(markdown)
library(tidyverse)
library(glue)
library(lubridate)
library(ggplot2)
library(maps)
library(readxl)
library(kableExtra)
library(openxlsx)
library(lme4)
library(gridExtra)
```

### Controlled *C. cinctus* Infestation of *B. inermis*  {.unnumbered}

```{r column.order}
column.order <- c("distance", "collection", "p.inf", 
                  "p.cut", "p.par", "poten")

column.order2 <- c("location", "distance", "collection", "p.inf", 
                  "p.cut", "p.par", "poten")

round_based_on_size <- function(x) {
  threshold <- 0.01
  rounded_values <- ifelse(abs(x) > threshold, round(x, 2), round(x, 3))
  return(rounded_values)
}
```

```{r (pf.RAW) post farm n.inf data}
pf.raw.2022 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2022/Post\ Farm\ 2022.xlsx", sheet = "n.inf")
pf.raw.2023 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2023.xlsx", sheet = "n.inf")
```

```{r (pf.inf.23) post farm inf data}
pf.inf.23 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2023.xlsx", sheet = "inf") %>%
  rename(n.1 = 8, n.2 = 9, n.3 = 10, n.4 = 11,
         n.5 = 12, n.6 = 13, n.7 = 14, n.8 = 15,
         n.9 = 16, n.10 = 17)
```

```{r (pf.comb) post farm data combined}
# 2022
pf.2022.site <-
pf.raw.2022 %>%
  group_by(treatment, site) %>%
  reframe(site, treatment,
            p.inf = sum(iv, ir, ix)/sum(uv, ur, iv, ir, ix),
            cut = sum(cut)/sum(total),
            total.stems = sum(iv, ir, ix, uv, ur)) %>%
  unique() %>%
  pivot_longer(-c(treatment, total.stems, site),
               names_to = "type",
               values_to = "percent") %>%
  mutate(year = "2022")

# 2023
pf.2023.site <-
pf.raw.2023 %>%
  group_by(treatment, site) %>%
  reframe(treatment, site, 
          t.inf = sum(n.iv, n.ir, n.ix),
          p.inf = sum(n.iv, n.ir, n.ix)/sum(n.uv, n.ur, 
                                            n.iv, n.ir, n.ix),
          cut = sum(cut)/sum(total),
          total.stems = sum(n.iv, n.ir, n.ix, n.uv, n.ur)) %>%
  distinct() %>%
  pivot_longer(-c(treatment, total.stems, site),
               names_to = "type",
               values_to = "percent") %>%
  filter(!type == "t.inf") %>%
  arrange(type) %>%
  mutate(year = "2023")

pf.comb <-
  pf.2022.site %>%
  rbind(pf.2023.site) %>%
  group_by(treatment, year, type) %>%
  mutate(count = n(),
         average = mean(percent),
         sd = sd(percent),
         se = (sd/sqrt(count))) %>%
  reframe(treatment, year, type,
          mean = mean(percent),
          sd = mean(sd),
          se = mean(se)) %>%
  unique()


```

```{r (pf.total) pf total stems}
# 2022 totals
pf.2022.total <-
  pf.raw.2022 %>%
  group_by(treatment) %>%
  reframe(total = sum(uv, ur, iv, ir, ix)) %>%
  mutate(year = "2022")
  
# 2023 totals
pf.2023.total <-
  pf.raw.2023 %>%
  group_by(treatment) %>%
  reframe(total = sum(n.uv, n.ur, n.iv, n.ir, n.ix)) %>%
  mutate(year = "2023")

pf.total.comb <-
  pf.2022.total %>%
  rbind(pf.2023.total)

```

```{r pf_lm}
raw.23 <-
pf.raw.2023 %>%
  dplyr::select(site, treatment,
                n.iv, n.ir, n.ix, n.ur, n.uv,
                cut) %>%
  rename(iv = n.iv,
         ir = n.ir,
         ur = n.ur,
         ix = n.ix,
         uv = n.uv) %>%
  mutate(year = 2023)

raw.22 <-
pf.raw.2022 %>%
  dplyr::select(site, treatment, 
                ix, ir, iv, ur, uv,
                cut) %>%
  mutate(year = 2022)

pf_inf_lm <-
raw.23 %>%
  rbind(raw.22) %>%
  group_by(site, treatment, year) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix)) %>%
  lm(inf ~ treatment + year, data = .) %>%
  summary()

pf_cut_lm <-
raw.23 %>%
  rbind(raw.22) %>%
  group_by(site, treatment, year) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix),
          cut = sum(cut)) %>%
  lm(cut ~ treatment + year, data = .) %>%
  summary()
```

```{r pf_per, eval = F}
raw.23 %>%
  rbind(raw.22) %>%
  group_by(treatment) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix),
          cut = sum(cut),
          p.inf = inf/total,
          p.cut = cut/inf)
```

*C. cinctus* heavily infested stems of *B. inermis* in the controlled test conditions. Averaged across both years, we observed 66.5% of stems infested for high treatments and 47.3% of stems for low treatments. We found strong evidence suggesting that there was a significant difference between infestation at high and low treatment levels when holding year constant (*r = `r round(pf_inf_lm$r.squared,3)`, P \< 0.05*, [Fig. 3](#figure3)).

```{r fig4_inf_cut_plot code}
pf.comb.hl <-
pf.comb %>%
  filter(!treatment == "control")

inf_cut_plot <-
ggplot() +
  facet_wrap(~treatment) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = pf.comb.hl %>%
             filter(type == "p.inf"),
           aes(year, mean, fill = "p.inf")) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = pf.comb.hl %>%
             filter(type == "cut"),
           aes(year, mean, fill = "cut")) +
  geom_errorbar(data = pf.comb.hl,
                aes(x = year,
                    ymin = mean - se,
                    ymax = mean + se),
                position = position_dodge(0.9),
                width = 0.2,
                alpha = 0.5) +
  theme_bw() +
  labs(x = element_blank(),
       y = "Percentage of stems (%)",
       fill = element_blank()) +
  scale_fill_brewer(palette = "Greys",
                    labels = c("Cut", "Infested"))
```

Stem cutting by mature larvae, leading into winter, was observed at 5.7% for the high treatments and 3.9% for the low, showing strong evidence for a difference in cutting between high and low treatment groups (*r = `r round(pf_cut_lm$r.squared,3)`, P < 0.05*). There was a dramatic decrease in survival observed from initial infestation to stem cutting. 

```{r figure_5_pf_inf_nodes}
pf.y.2022 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2022.xlsx", sheet = "inf")
pf.y.2023 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2023.xlsx", sheet = "inf")

# DATA FOR THE PLOT
pf.nodes.plot.data <-
pf.y.2023 %>%
  dplyr::select(-c(Name, 'Date Proc')) %>%
  dplyr::select(treatment, 6:15) %>%
  pivot_longer(-c(treatment),
               names_to = "node",
               values_to = "value") %>%
  mutate(node = gsub("n_", "", node)) %>%
  na.omit() %>%
  mutate(year = "2023") %>%
  rbind(pf.y.2022 %>%
          dplyr::select(-c(site1, site2, site12, site3,
                           Name, 'Date Proc')) %>%
          dplyr::select(treatment, 
                        2, 3, 4, 5, 6, 
                        7, 8, 9, 10, 11) %>%
          pivot_longer(-c(treatment),
                       names_to = "node",
                       values_to = "value") %>%
          na.omit() %>%
          mutate(year = "2022")) %>%
  group_by(year, treatment, node) %>%
  reframe(count = n()) %>%
  group_by(year, treatment) %>%
  mutate(per = count/sum(count)) %>%
  mutate(node = as.numeric(node)) 

# PLOT
pf_nodes_plot <-
  pf.nodes.plot.data %>%
  ggplot() +
  geom_bar(stat = 'identity',
           aes(x = node, y = per, fill = treatment),
           position = position_dodge(),
           color = "black") +
  theme_bw() +
  scale_fill_brewer(palette = "Greys") +
  scale_x_continuous(breaks = 1:10) +
  labs(x = "Stem Internode",
       y = "Percent of internodes infested") +
  facet_wrap(~year) 

pf_nodes_over_4_table <-
pf.nodes.plot.data %>%
  group_by(year, node) %>%
  reframe(count = sum(count)) %>%
  group_by(year) %>%
  mutate(per = count/sum(count)) %>%
  filter(node > 4) %>%
  group_by(year) %>%
  reframe(sum = sum(per))
```

*C. cinctus* infested stems often contained larvae burrowing through multiple nodes. In 2022, `r round(pf_nodes_over_4_table[1,2],3)*100`% of stems were observed to have at least 4 nodes burrowed through, or 5 internodes occupied. In 2023, `r round(pf_nodes_over_4_table[2,2],3)*100`% of stems had at least 4 nodes infested [Fig. 4](#figure4)


### Montana Field Sites {.unnumbered}

#### Historical Weather Analysis & NDVI {.unnumbered}

```{r moc_weather}

# moccasin NOAA
moc_weather_noaa <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/moccasin_weather_noaa.xlsx") %>%
  filter(station == "USW00024036") %>%
  dplyr::select(date, variable, value, year) %>%
  mutate(date = ymd(date))

# moccasin prcp MAES
moc_prcp_maes <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/moc_weather_maes.xlsx",
             sheet = "prcp") %>%
    dplyr::select(-1, -Annual, -Seasonal) %>%
    pivot_longer(-Year,
                 names_to = "month",
                 values_to = "prcp") %>%
    mutate(Year = lubridate::year(as.Date(Year, format = "%Y"))) %>%
    rename("year" = Year) %>%
    group_by(year) %>%
    reframe(prcp = sum(prcp)) 
  
# moccasin temp MAES
moc_temp_maes <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/moc_weather_maes.xlsx",
             sheet = "temp") %>%
    dplyr::select(-1, -Annual, -Seasonal) %>%
    pivot_longer(-Year,
                 names_to = "month",
                 values_to = "temp") %>%
    mutate(Year = lubridate::year(as.Date(Year, format = "%Y"))) %>%
    rename("year" = Year) %>%
    group_by(year) %>%
    reframe(temp = mean(temp)) 

# past 50 years prcp data
moc_prcp_50 <-
moc_prcp_maes %>%
  filter(year > 1975)

# past 50 years temp data
moc_temp_50 <-
  moc_temp_maes %>%
  filter(year > 1975)
```

```{r bs_weather}
# big sandy
bs_weather <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/bigsandy_weather_noaa.xlsx") %>%
  filter(station == "USC00240770") %>%
  dplyr::select(date, variable, value, year, station) %>%
  mutate(date = ymd(date))

# past 50 years prcp data
bs_prcp_50 <-
bs_weather %>%
  filter(variable == "PRCP") %>%
  group_by(year) %>%
  reframe(prcp = mean(value)) %>%
  distinct() %>%
  filter(year > 1975,
         year < 2024,
         prcp < 25)

bs_temp_noaa <-
bs_weather %>%
  filter(variable %in% c("TMAX", "TMIN"),
         value < 100,
         value > -30) %>%
  pivot_wider(names_from = "variable",
              values_from = "value") %>%
  na.omit() %>%
  group_by(date, station) %>%
  mutate(daily = (TMAX - TMIN)/2) %>%
  mutate(month = month(date)) %>%
  # filter(month > 3,
  #       month < 9) %>%
  group_by(year, station) %>%
  reframe(temp = mean(daily)) 

```

```{r both_prcp}
both_locations_prcp <-
bs_prcp_50 %>%
  mutate(location = "Big Sandy") %>%
  rbind(moc_prcp_50 %>%
          mutate(location = "Moccasin"))

both_prcp_lm <-
both_locations_prcp %>%
  filter(location == "Big Sandy") %>%
  lm(prcp ~ year, data = .) %>%
  summary()

moc_50_lm <-
  moc_prcp_50 %>%
  lm(prcp ~ year, data = .) %>%
  summary()

bs_50_lm <-
  bs_prcp_50 %>%
  lm(prcp ~ year, data = .) %>%
  summary()

calculate_segment <- function(model) {
  intercept <- model$coefficients[1, 1]
  slope <- model$coefficients[2, 1]
  segment_formula <- function(x) intercept + slope * x
  x_start <- 1975
  x_end <- 2024
  y_start <- segment_formula(x_start)
  y_end <- segment_formula(x_end)
  segment_data <- data.frame(x_start, y_start, x_end, y_end)
  return(segment_data)
}

bs_segment <- calculate_segment(bs_50_lm)
moc_segment <- calculate_segment(moc_50_lm)

both_prcp_plot <-
both_locations_prcp %>%
  ggplot() +
  theme_bw() +
  geom_segment(data = bs_segment,
               aes(x = x_start, 
                   y = y_start,
                   xend = x_end, 
                   yend = y_end),
               color = "#F8766D",
               alpha = 0.5) +
  geom_segment(data = moc_segment,
               aes(x = x_start, 
                   y = y_start,
                   xend = x_end, 
                   yend = y_end),
               color = "#00BFC4",
               alpha = 0.5) +
  geom_line(aes(x = year, y = prcp, color = location),
            size = 0.3) +
  geom_smooth(aes(x = year, y = prcp),
              method = "lm",
              se = FALSE,
              color = "black",
              size = 0.5,
              alpha = 0.2) +
  labs(color = "Location (MT, USA)",
       x = NULL,
       y = "Average Yearly Precipitation (in)")
```

```{r both_temp}
both_temp <-
moc_temp_maes %>%
  mutate(location = "Moccasin") %>%
  bind_rows(bs_temp_noaa %>%
              select(-station) %>%
              mutate(location = "Big Sandy") %>%
              filter(temp < 50)) %>%
  mutate(temp = ifelse(location == "Big Sandy",
                       (temp - 32) * (5/9) * -1 + 10,
                       (temp - 32) * (5/9))) %>%
  filter(year > 1950)

both_temp_plot <-
both_temp %>%
  na.omit() %>%
  ggplot() +
  geom_line(aes(x = year, y = temp, color = location),
            alpha = 0.5) +
  geom_smooth(aes(x = year, y = temp),
              method = "lm",
              se = FALSE,
              color = "black") +
  geom_smooth(aes(x = year, y = temp, color = location),
              method = "lm",
              se = FALSE,
              size = 0.3) +
  theme_bw() +
  labs(color = "Location (MT, USA)",
       x = NULL,
       y = "Mean Yearly Temperature (°C)")

# lm both
both_temp_lm <-
both_temp %>%
  lm(temp ~ year + location, data = .) %>%
  summary()

```

```{r save temp, echo = F}
calculate_segment <- function(model) {
  intercept <- model$coefficients[1, 1]
  slope <- model$coefficients[2, 1]
  segment_formula <- function(x) intercept + slope * x
  x_start <- 1975
  x_end <- 2024
  y_start <- segment_formula(x_start)
  y_end <- segment_formula(x_end)
  segment_data <- data.frame(x_start, y_start, x_end, y_end)
  return(segment_data)
}

# moc_segment <- calculate_segment(moc_lm)

moc_temp_plot <-
moc_temp_maes %>%
  ggplot() +
  theme_bw() +
  geom_line(aes(x = year, y = ((temp - 32) * (5/9))),
            size = 0.4) + 
  geom_smooth(aes(x = year, y = ((temp - 32) * (5/9))),
              method = "lm",
              se = FALSE,
              size = 0.5,
              alpha = 0.2) +
  labs(color = "Location (MT, USA)",
       x = NULL,
       y = "Average Yearly Temperature (°C)")

```

```{r bs_seasonal_plot}
lochy_precip <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/precip_scrape.xlsx", sheet = "big_sandy")

line_table <-
lochy_precip %>%
  dplyr::select(date, prcp) %>%
  mutate(month = month(date),
         day = day(date),
         year = as.factor(year(date))) %>%
  mutate(new_date = make_date(year = 0,
                              month = month,
                              day = day)) %>%
   mutate(category = case_when(new_date < "0000-07-15" ~ "pre",
                              new_date > "0000-09-15" ~ "post",
                              new_date >= "0000-07-15" & new_date <= "0000-09-15" ~ "mid")) %>%
  mutate(model_category = if_else(category == "mid", 
                                  "mid", "no")) 

line_table_average <-
  line_table %>%
  group_by(month, day) %>%
  reframe(category, new_date,
          prcp = mean(prcp)) 

category_averages <-
line_table_average %>%
  na.omit() %>%
  group_by(category) %>%
  reframe(prcp = mean(prcp))

bs_seasonal_lm <-  
line_table %>%
  lm(prcp ~ model_category + year, data = .) %>%
  summary()

mult = 3

smooth_plot <-
ggplot() +
  geom_smooth(aes(x = new_date, y = prcp),
              data = line_table_average,
              se = FALSE,
              method = 'loess',
              color = "black") +
  geom_rect(aes(xmin = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0528 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-07-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0528 * mult, yend = 0.0528 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0164 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-09-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0164 * mult, yend = 0.0164 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-10-31", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0281 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-10-31", 
                                  format = "%Y-%m-%d"),
                   y = 0.0281 * mult, yend = 0.0281 * mult),
               color = "blue",
               alpha = 0.5) +
  theme_bw()

bs_seasonal_plot <-
ggplot() +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "pre"),
            color = "black",
            linewidth = 0.25) +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "post"),
            color = "black",
            linewidth = 0.25) +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "mid"),
            color = "black") +
  geom_rect(aes(xmin = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0528 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-07-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0528 * mult, yend = 0.0528 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0164 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-09-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0164 * mult, yend = 0.0164 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-10-31", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0281 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-10-31", 
                                  format = "%Y-%m-%d"),
                   y = 0.0281 * mult, yend = 0.0281 * mult),
               color = "blue",
               alpha = 0.5) +
  labs(x = NULL,
       y = "Average Daily Precipitation (in)",
       color = NULL) +
  scale_y_continuous(sec.axis = sec_axis(~ . * mult, 
                                         name = "Average Seasonal Precpitation (in)")) +
  scale_x_date(
    date_breaks = "1 month",
    date_labels = "%B") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
```

```{r moc_seasonal_plot}
moc_precip <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Weather\ Data/Weather\ Data/weather/precip_scrape.xlsx", sheet = "moccasin")

line_table <-
moc_precip %>%
  dplyr::select(date, prcp) %>%
  mutate(month = month(date),
         day = day(date),
         year = as.factor(year(date))) %>%
  mutate(new_date = make_date(year = 0,
                              month = month,
                              day = day)) %>%
   mutate(category = case_when(new_date < "0000-07-15" ~ "pre",
                              new_date > "0000-09-15" ~ "post",
                              new_date >= "0000-07-15" & new_date <= "0000-09-15" ~ "mid")) %>%
  mutate(model_category = if_else(category == "mid", 
                                  "mid", "no")) 

line_table_average <-
  line_table %>%
  group_by(month, day) %>%
  reframe(category, new_date,
          prcp = mean(prcp)) 

category_averages <-
line_table_average %>%
  na.omit() %>%
  group_by(category) %>%
  reframe(prcp = mean(prcp))

moc_seasonal_lm <-  
line_table %>%
  lm(prcp ~ model_category + year, data = .) %>%
  summary()

mult = 3

moc_seasonal_plot <-
ggplot() +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "pre"),
            color = "black",
            linewidth = 0.25) +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "post"),
            color = "black",
            linewidth = 0.25) +
  geom_line(aes(x = new_date, y = prcp),
            data = line_table_average %>%
              filter(category == "mid"),
            color = "black") +
  geom_rect(aes(xmin = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0528 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-05-01", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-07-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0528 * mult, yend = 0.0528 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0164 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-07-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-09-15", 
                                  format = "%Y-%m-%d"),
                   y = 0.0164 * mult, yend = 0.0164 * mult),
               color = "blue",
               alpha = 0.5) +
  geom_rect(aes(xmin = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                xmax = as.Date("0000-10-31", 
                               format = "%Y-%m-%d"),
                ymin = 0, 
                ymax = 0.0281 * mult),
            alpha = 0.1,
            fill = "blue") +
  geom_segment(aes(x = as.Date("0000-09-15", 
                               format = "%Y-%m-%d"), 
                   xend = as.Date("0000-10-31", 
                                  format = "%Y-%m-%d"),
                   y = 0.0281 * mult, yend = 0.0281 * mult),
               color = "blue",
               alpha = 0.5) +
  labs(x = NULL,
       y = "Average Daily Precipitation (in)",
       color = NULL) +
  scale_y_continuous(sec.axis = sec_axis(~ . * mult, 
                                         name = "Average Seasonal Precpitation (in)")) +
  scale_x_date(
    date_breaks = "1 month",
    date_labels = "%B") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
```

In both Big Sandy and Moccasin, MT, we observed a decrease in average yearly precipitation and increase in average yearly temperature. We observed a significant linear relationship (*r = `r round(both_prcp_lm$r.squared,3)`, P = `r round(both_prcp_lm$coefficients[2,4],3)`, estimate = `r round(both_prcp_lm$coefficients[2,1],3)`*) between average precipitation and year for both Big Sandy and Moccasin, Montana. For each location and one-year increase, we observed a 0.05 inch decrease in precipitation. ([Fig. 5](#figure5)). Additionally, we observed a significant positive linear relationship (*r = `r round(both_temp_lm$r.squared,3)`, P \< 0.05, estimate = `r round(both_temp_lm$coefficients[2,1],3)`*) between year and average yearly temperature for Moccasin and Big Sandy, MT. Thus, each year, the average daily temperature has increased by `r round(both_temp_lm$coefficients[2,1],2)`°C. ([Fig. 6](#figure6)). 
Analyzing local, precipitation data over the past five years yielded information on how central and northern Montana experience relative dryness during the late-summer months. In Big Sandy, when controlling for year, we saw strong evidence of a significant difference (*p<0.05, F=2.067*, [fig. 7](#figure7)) between daily rainfall in months prior July 15 and after September 15 compared to days within the July 15 to September 15 'late-summer' period. Analysis of Moccain precipitation data revealed that there is little evidence (*p=0.08, F=1.535*) to suggest a difference between the two date categories. 

```{r Big_Sandy_NDVI}
lochy <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/ndvi/ndvi_2023.xlsx", sheet = "lochy") %>%
  filter(use == "yes") %>%
  mutate(date = ymd(date1)) %>%
  dplyr::select(date,wheat,brome) %>%
  pivot_longer(-date,
               names_to = "plant_type",
               values_to = "ndvi") 
ndvi_model <-
lochy %>%
  filter(date > "2023-07-15") %>%
  lm(ndvi ~ plant_type + date, data = .) %>%
  summary()


label_x <- as.Date("2023-07-15")
label_y <- 0.75
line_x <- as.numeric(as.Date("2023-07-15"))

bs_ndvi_plot <-
lochy %>%
  ggplot() +
  geom_point(aes(x = date, y = ndvi, color = plant_type),
             alpha = 0.5,
             pch = 1,
             size = 0.75) +
  geom_line(aes(x = date, y = ndvi, 
                color = plant_type, linetype = plant_type),
            alpha = 0.5,
            size = 0.5) +
  geom_smooth(aes(x = date, y = ndvi, color = plant_type),
              se = FALSE) +
  geom_vline(xintercept = line_x,
             linetype = "dashed", color = "black") +
  geom_label(aes(x = label_x,
                 y = 0.8),
             label = "Average spring wheat harvest",
             hjust = -0.1,
             size = 3) +
  theme_bw() +
  guides(color = FALSE) +
  labs(x = NULL,
       y = "NDVI",
       linetype = NULL) +
  scale_linetype_discrete(labels = c(expression(italic("B. inermis")),"Spring Wheat"))
```

We observed a notable difference in NDVI when comparing adjacent *B. inermis* and spring wheat. We saw a significant difference in the *B. inermis* post-July 15 NDVI (*`r round(ndvi_model$r.squared,3)`, P<0.05*) when compared to the post-July 15 NDVI of the adjacent wheat crop. The *B. inermis* NDVI remained relatively linear in it's downslope compared to the wheat field ([Fig. 7](#figure7)).

#### Field Site Samples {.unnumbered}
```{r stubble data}
# stubble 2023
stubble.2023 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", 
           sheet = "stubble") %>%
  dplyr::select(-c(name,date.proc,"%inf", "%cut")) %>%
  na.omit() %>%
  mutate(year = "2023") 

# stubble 2022
stubble.2022 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", 
             sheet = "stubble") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(name, date.proc, "%inf", "%cut"))

comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 
```

```{r brome data}
# brome 2022
raw.2022 <- 
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", sheet = "n.infested") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(other, date.proc, name, 
                   par.rate, cut.rate, inf)) %>%
  rename("site" = site.cap)

# brome 2023
raw.2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "n.infested") %>%
  mutate(year = "2023") %>%
  dplyr::select(-c(loc.stub, date.proc, uv, ur, iv, ir, ix, 
                   total.stems, add, inf, a)) %>%
    rename(uv = n.uv,
           ur = n.ur,
           iv = n.iv,
           ir = n.ir,
           ix = n.ix,
           total.stems = n.total)
# combine brome years
comb.brome <- 
raw.2023 %>%
  rbind(raw.2022) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(iv, ir, ix),
         uninf = sum(uv, ur),
         cut = sum(cut)) %>%
  dplyr::select(-c(iv, ir, ix, uv, ur)) %>%
  mutate(distance = "brome")
```

We quantified *C. cinctus* and *Bracon* spp. parasitoid presence in 6,148 wheat and grass stems across 10 research sites in 2022 and 2023. Initial infestation of *B. inermis* by *C. cinctus* varied between collection sites, with the greatest infestation taking place within our three Big Sandy, MT sampling sites (2023: 65.4%, 2022: 63.1%), while the lowest infestation observed was in Moccasin, MT (2023: 40.8%, 2022: 60.7%). Across all sites in Big Sandy and Moccasin, we observed an average infestation of 57.5% within *B. inermis* and 47.6% within the adjacent wheat. Cutting by *C. cintus* was observed at an average rate of 5.59% in *B. inermis* and 47.1% in the adjacent cultivated wheat ([Fig. 8](#figure8). 

To generate a relative estimate of the number of available *C. cinctus* host larvae within *B. inermis* late in the growing season, we calculated the number of stems that contained at least four or more nodes with burrowing injury. In Big Sandy, 76.2% of collected stems in the fall exhibited at least 4 nodes of burrowing injury at our second sampling date. In Moccasin, the corresponding figure was 66.5% ([Fig. 9](#figure9)).

```{r y_inf_brome}
brome_inf_2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "y.infested") %>%
  dplyr::select(-c("date.proc")) %>%
  mutate(year = "2023")

brome_inf_2022 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", sheet = "y.infested") %>%
  dplyr::select(-c("old name", "name", "date.proc", "cut")) %>%
  mutate(year = "2022")
```

```{r per_nodes_inf}
internode.data <-
brome_inf_2023 %>%
  rbind(brome_inf_2022) %>%
  mutate(row_num = row_number()) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  dplyr::select(-location) %>%
  mutate(row_num = row_number()) %>%
  pivot_longer(-c(year, site, sample_site, region, 
                  collection, lar, v.r, row_num),
               names_to = "node",
               values_to = "status") 
brome.nodes <-
internode.data %>%
  group_by(region, collection,
           node) %>%
  na.omit() %>%
  reframe(count = n()) %>%
  mutate(node = as.numeric(node)) %>%
  group_by(region, collection) %>%
  mutate(per = count/sum(count)) %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = node, y = per, fill = collection),
           position = position_dodge(),
           color = "black") +
  facet_wrap(~region) +
  scale_x_continuous(breaks = 1:10) +
  theme_bw() +
  scale_fill_brewer(palette = "Greys") +
  labs(x = "Stem Internode",
       y = "Percentage of nodes infested",
       fill = "Collection")

```

```{r plot_data}
plot.data <-
comb.brome %>%
  rbind(comb.stubble) %>%
  na.omit() %>%
  filter(!location %in% c("chs", "b")) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat")) %>%
  dplyr::select(year, region, sample_site, collection, plant_type,
                total.stems, inf, uninf, cut, c, e) %>%
  group_by(site, collection, year) %>%
  mutate(par = sum(c,e)) %>% dplyr::select(-c(c,e)) %>%
  group_by(year, collection, region, sample_site, plant_type, site) %>%
  mutate(count = n()) %>%
  ungroup() %>%
  dplyr::select(-c(uninf)) %>%
  group_by(year, collection, region, sample_site, plant_type, site) %>%
  mutate(total.stems = sum(total.stems),
         count = sum(count),
         per.inf = inf/total.stems,
         per.par = par/inf,
         per.cut = cut/inf) %>%
  distinct() %>%
  pivot_longer(-c(year, collection, region, sample_site, 
                  plant_type, count, total.stems, site, inf, cut, par),
               names_to = "variable",
               values_to = "value") %>%
  dplyr::select(-site) %>%
  group_by(year, collection, region, sample_site, plant_type) %>%
  mutate(total.stems = sum(total.stems),
         count = sum(count),
         inf = sum(inf),
         cut = sum(cut),
         par = sum(par)) %>%
  group_by(year, collection, region, sample_site, plant_type, variable) %>%
  mutate(sd = sd(value),
         value = mean(value),
         se = sd/sqrt(count)) %>%
  ungroup() %>%
  dplyr::select(-site) %>%
  distinct() 

```

```{r fig_9_brome_par_plot}
brome_par_plot <-
plot.data %>%
  filter(
         plant_type == "brome",
         variable == "per.par") %>%
  mutate(collection = factor(collection, levels = c("summer", "fall"))) %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = sample_site, y = value, fill = collection),
           position = position_dodge(),
           width = 0.5,
           color = "black") +
  geom_errorbar(aes(x = sample_site,
                    group = collection,
                    ymin = value - se,
                    ymax = value + se),
                position = position_dodge(width = 0.5),
                width = 0.15) +
  theme_bw() +
  labs(x = NULL) +
  scale_fill_brewer(palette = "Greys") +
  facet_wrap(year~region, scales = "free_x")
```

```{r brome_par_model}
brome_par_model_data <-
comb.brome %>%
  rbind(comb.stubble) %>%
  na.omit() %>%
  filter(!location %in% c("chs", "b")) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat")) %>%
  dplyr::select(year, region, sample_site, collection, plant_type,
                total.stems, inf, uninf, cut, c, e) %>%
  group_by(site, collection, year) %>%
  mutate(par = sum(c,e)) %>% dplyr::select(-c(c,e)) %>%
  group_by(year, collection, region, sample_site, plant_type, site) %>%
  mutate(count = n()) %>%
  ungroup() %>%
  dplyr::select(-c(uninf)) %>%
  group_by(year, collection, region, sample_site, plant_type, site)

brome_par_model <-
brome_par_model_data %>%
  filter(plant_type == "brome") %>%
  lm(par ~ year + region + collection, data = .) %>%
  summary()


```

```{r per.par, eval = F}
comb.stubble %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  group_by(region) %>%
  reframe(total.stems = sum(total.stems),
          inf = sum(inf),
          cut = sum(cut),
          par = sum(c, e),
          inf.per = inf/total.stems,
          cut.per = cut/inf,
          par.per = par/inf) %>%
  dplyr::select(par.per)
  
comb.stubble %>%
  dplyr::select(-c(uninf, cut, c, e, total.stems))
```

```{r infestation_per, eval = F}
comb.brome %>%
  group_by(location, collection, year) %>%
  # filter(collection == "fall") %>%
  reframe(inf = sum(inf)/sum(total.stems)) %>%
  distinct() %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  group_by(collection, year, region) %>%
  reframe(inf = mean(inf)) %>%
  na.omit() %>%
  arrange(desc(inf))

plot.data %>%
  filter(collection == "fall") %>%
  group_by(region, collection, plant_type) %>%
  reframe(per.par = sum(par)/sum(total.stems))

comb.brome %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  na.omit() %>%
  group_by(region, collection) %>%
  reframe(inf = sum(inf),
          cut = sum(cut),
          cut.per = cut/inf)
```

```{r paraistism_per, eval = F}
plot.data %>%
  filter(collection == "fall",
         year == "2023") %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = variable, y = value, fill = plant_type),
           position = position_dodge(width = 0.5),
           width = 0.5) +
  geom_errorbar(aes(x = variable, fill = plant_type,
                    ymin = value - se,
                    ymax = value + se),
                position = position_dodge(width = 0.5),
                width = 0.2) +
  facet_wrap(sample_site~region) +
  theme_bw() +
  scale_fill_brewer(palette = "Greys") +
  labs(x = NULL,
       y = "Percentage (%)")


mutate(type2 = if_else(
    type %in% c("p_mean", "p_sd", "p_se"), "p", "cut"),
    stat = str_replace(type, ".*_", "")) %>%
  dplyr::select(-type) %>%
  pivot_wider(values_from = value,
              names_from = stat) %>%
  filter(region == "Big Sandy")

plot.data %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = plant_type, y = mean, 
               fill = type2),
           position = position_dodge()) +
  facet_wrap(~ year,) +
  theme_bw()
```

```{r fig7_field_cut_plot_code}
field_cut_plot_data <-
plot.data %>%
  filter(variable == "per.cut") %>%
  filter(collection == "fall") %>%
  mutate(sample_site = factor(sample_site,
                              levels = c("Sunset & Harvest",
                                         "Kolin Road",
                                         "Gardiner Road",
                                         "North Road")))

mean_values <-
field_cut_plot_data %>%
  group_by(year, plant_type) %>%
  reframe(value = mean(value),
          se = mean(se)) %>%
  group_by(plant_type) %>%
  reframe(value = mean(value),
          se = mean(se))
  
field_cut_plot <-
field_cut_plot_data %>%
  ggplot() +
  geom_bar(stat = 'identity',
           aes(x = sample_site, 
               y = value, fill = plant_type),
           position = position_dodge(width = 0.5),
           width = 0.5,
           color = "black") +
  geom_errorbar(aes(x = sample_site,
                    group = plant_type,
                    ymin = value - se,
                    ymax = value + se),
                position = position_dodge(width = 0.5),
                width = 0.2) +
  geom_hline(data = field_cut_plot_data %>%
               group_by(year, plant_type) %>%
               reframe(mean_value = mean(value)),
             aes(yintercept = mean_value,
                 linetype = plant_type)) +
  facet_wrap(~year) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = NULL,
       linetype = "Average Cutting Across Sites",
       y = "% of stems cut",
       fill = "Plant Type") +
  scale_fill_brewer(palette = "Greys") +
  scale_color_brewer(palette = "Greys") 



# Your data
field_cut_plot_data <- data.frame(
  year = c("2022", "2022", "2023", "2023"),
  plant_type = c("brome", "wheat", "brome", "wheat"),
  value = c(0.0588, 0.475, 0.0529, 0.468)
)
```


```{r fig8_plot ratios with error bars}
# brome 2022
raw.2022 <- 
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", sheet = "n.infested") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(other, date.proc, name, 
                   par.rate, cut.rate, inf)) %>%
  rename("site" = site.cap)

# brome 2023
raw.2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "n.infested") %>%
  mutate(year = "2023") %>%
  dplyr::select(-c(loc.stub, date.proc, uv, ur, iv, ir, ix, 
                   total.stems, add, inf, a)) %>%
    rename(uv = n.uv,
           ur = n.ur,
           iv = n.iv,
           ir = n.ir,
           ix = n.ix,
           total.stems = n.total)
# combine brome years
comb.brome <- 
raw.2023 %>%
  rbind(raw.2022) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(iv, ir, ix),
         uninf = sum(uv, ur)) %>%
  dplyr::select(-c(iv, ir, ix, uv, ur)) %>%
  mutate(distance = "brome")


# stubble 2023
stubble.2023 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", 
           sheet = "stubble") %>%
  dplyr::select(-c(name,date.proc,"%inf", "%cut")) %>%
  na.omit() %>%
  mutate(year = "2023")

# stubble 2022
stubble.2022 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", 
             sheet = "stubble") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(name, date.proc, "%inf", "%cut"))

comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 

########### combine brome and wheat data ###########

ratio_plot_data <-
comb.brome %>%
  rbind(comb.stubble) %>%
  na.omit() %>%
  dplyr::select(year, site, location, collection, distance, everything()) %>%
  mutate(location = if_else(location %in% c("ke", "kw"), 
                            "k", location),
         location = if_else(location %in% c("nn", "ns"), 
                            "n", location)) %>%
  mutate(region = if_else(
    location %in% c("har", "sun", "k", "chs"),
    "moccasin", "big sandy")) %>%
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat")) %>%
  dplyr::select(-distance) %>%
  group_by(year, site, location, collection) %>%
  mutate(p = sum(c, e)) %>% dplyr::select(-c(c, e, inf, uninf)) %>%
  group_by(year, region, collection, plant_type) %>%
  reframe(year, region, collection, plant_type,
          total.stems = sum(total.stems),
          p_mean = mean(p),
          p_sd = sd(p),
          p_se = p_sd/sqrt(total.stems),
          cut_mean = mean(cut),
          cut_sd = sd(cut),
          cut_se = cut_sd/sqrt(total.stems)) %>%
  distinct() %>%
  group_by(year, region, collection, plant_type) %>%
  mutate(ratio = p_mean/cut_mean,
         ratio_se = ratio*sqrt((p_se/p_mean)^2 + (cut_se/cut_mean)^2)) %>%
  filter(collection == "fall") 

ratio_plot <-
  ratio_plot_data %>%
  ggplot() +
  geom_bar(stat = "identity",
             aes(x = plant_type,
                 y = ratio, 
                 fill = plant_type),
             color = "black") +
  geom_errorbar(aes(x = plant_type,
                    ymin = ratio - ratio_se,
                    ymax = ratio + ratio_se),
                width = 0.15) +
  theme_bw() +
  theme(legend.position = "none") +
  labs(x = NULL,
       y = "Ratio of parasitized stems to cut stems") +
  scale_fill_brewer(palette = "Greys") +
  geom_hline(yintercept = 1, 
             linetype = "dashed",
             color = "black") +
  facet_grid(year~region)
```


We utilized the ratio of parasitized stems to cut stems to better understand the true impact of our *B. inermis* sink/source ecology. The largest ratio observed was in Big Sandy, MT in the fall of 2022, where we observed a ratio of 16 parasitoids to a single *C. cinctus*-cut stem. Thus, for every square meter of *B. inermis*, we would observe 16 stems that produced a parasitoid for every 1 stem that was likely to produce an adult *C. cinctus*. All other sample locations also showed positive ratios of parasitoids to cut stems [(Fig. 10)](#figure10).

To understand the seasonal trends of *Bracon* spp use of potential *C. cinctus* hosts within *B. inermis*, we collected stem samples twice each growing season. We collected one pre-harvest, in July, and a second time in September, after all adult *Bracon* spp would be dead. We observed a significant difference (*df = 96, r = 0.304, p < 0.05*) between parasitoid presence in infested stems collected in Big Sandy and Moccasin, MT. 


```{r larvae_status models, eval = F}
brome_2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "y.infested") 

brome_2023 %>%
  dplyr::select(-date.proc) %>%
  mutate(row_num = row_number()) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  dplyr::select(-location) %>%
  pivot_longer(-c(site, sample_site, region, 
                  collection, lar, v.r, row_num),
               names_to = "node",
               values_to = "status") %>%
  na.omit() %>%
  mutate(row_num = as.factor(row_num)) %>%
  group_by(row_num, site, sample_site, 
           region, collection) %>%
  reframe(count = n()) %>%
  lmer(count ~ collection + (1 | sample_site), 
       data = .) %>%
  summary()



```

```{r larvae_status_stats, eval = F}
data <-
brome_inf_2023 %>%
  rbind(brome_inf_2022) %>%
  mutate(row_num = row_number()) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  dplyr::select(-location) %>%
  mutate(row_num = row_number()) %>%
  pivot_longer(-c(year, site, sample_site, region, 
                  collection, lar, v.r, row_num),
               names_to = "node",
               values_to = "status") 

data %>%
  group_by(year, region, sample_site, collection,
           node) %>%
  na.omit() %>%
  reframe(count = n()) %>%
  group_by(year, region, sample_site, collection) %>%
  mutate(per = count/sum(count)) %>%
  filter(node >= 4) %>%
  group_by(year, region, sample_site, collection) %>%
  reframe(per = sum(per)) %>%
  pivot_wider(names_from = collection,
              values_from = per) %>%
  arrange(region, sample_site)
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = year, y = per, fill = collection),
           position = position_dodge())

  na.omit() %>%
  mutate(row_num = as.factor(row_num)) %>%
  group_by(row_num, site, sample_site, 
           region, collection) %>%
  reframe(count = n()) %>%
  rename(nodes.inf = count) %>%
  group_by(sample_site, region, collection, nodes.inf) %>%
  reframe(count2 = n()) %>%
  mutate(nodes.inf = as.factor(nodes.inf)) 
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = collection, y = count2, fill = nodes.inf),
           position = position_dodge()) +
  facet_wrap(~sample_site)
  
  
  # how many stems had living larvae in the fall?
data %>%
  group_by(year, region, sample_site, collection,
           node) %>%
  na.omit() %>%
  reframe(count = n()) %>%
  group_by(year, region, sample_site, collection) %>%
  mutate(per = count/sum(count)) %>%
  filter(node >= 4) %>%
  group_by(year, region, sample_site, collection) %>%
  reframe(per = sum(per)) %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = year, y = per, fill = collection),
           position = position_dodge())

data %>%
  dplyr::select(year, sample_site, region, collection, lar) %>%
  distinct() %>%
  group_by(year, sample_site, region, collection, lar) %>%
  reframe(count = n()) %>%
  filter(collection == "fall",
         lar == "a")
  
  group_by(sample_site, region, collection) %>%
  reframe(count = n()) 
  group_by(sample_site, region, collection) %>%
  mutate(total = sum(count),
         per = count / total) 
  filter(lar %in% c("a", "c", "cut", "e")) %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = sample_site, y = per, fill = lar),
           position = position_dodge()) +
  facet_wrap(~collection)
```

I want to drive home that stems with 3 + nodes infested likely had larave that 
were alive late into the summer. Compare the number of nodes infested in the 
summer to stems that have 3+ infested in the fall. 


```{r infestation, eval = F}
comb.brome %>%
  group_by(location, collection, year) %>%
  # filter(collection == "fall") %>%
  reframe(inf = sum(inf)/sum(total.stems)) %>%
  distinct() %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  group_by(collection, year, region) %>%
  reframe(inf = mean(inf)) %>%
  na.omit() %>%
  arrange(desc(inf)) %>%
  group_by(collection) %>%
  reframe(inf = mean(inf))


```

```{r, eval = F}
comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 

comb.stubble %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  ungroup() %>%
  reframe(inf = sum(inf)/sum(total.stems))
  group_by(region, collection, year) %>%
  reframe(inf = mean(inf))
```

